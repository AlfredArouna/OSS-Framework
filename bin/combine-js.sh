#! /bin/sh

#
# Copyright (c) 2013 Open Source Solutions Limited
#

#File header

HEADER=`/bin/cat << 'endheader'
/**
 * This file is combination of other javascript files from OSS-Framework.
 *
 * NOTICE:  Do not edit this file it will be overwritten by combine-js.sh script 
 *
 * Copyright (c) 2013 Open Source Solutions Limited
 *
 * Open Source Solutions Limited T/A Open Solutions
 *   147 Stepaside Park, Stepaside, Dublin 18, Ireland.
 *   Barry O\'Donovan <barry _at_ opensolutions.ie>
 *
 * @copyright Copyright (c) 2013 Open Source Solutions Limited
 * @license http://opensource.org/licenses/gpl-3.0.html GNU General Public License, version 3 (GPLv3)
 * @author Open Source Solutions Limited <info _at_ opensolutions.ie>
 */
 
endheader`

#Prints usage to screen
function usage ()
{
/bin/cat << 'endusage'
Usage:
  bash ./combine-js.sh [-h] [-l] [-o <filename>] [-p <dir>] [file1 file2 ...]

Parameters:
 -l            List files to be included in conmbine
 
 -o <filename> Output file name. Default: combined.js
 
 -p <dir>      Js file directory related with script. Default: ../data/js

 -h            Help information

  file ...     Files to exclude from combined js. File names can be used from runing script 
               with -o parameter.
  
endusage
}



OUTPUT="combined.js";
PATH="../data/js";
LIST=0

while getopts ":o:p:lh" option
do
    case "${option}"
    in
        o)
            OUTPUT=$OPTARG
            ;;
        p)
            PATH=$OPTARG
            ;;
        h)
            usage
            exit 0
            ;;
        l)
            echo "Js file list to be included in combined js:"
            LIST=1
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
    esac
done

shift $(($OPTIND - 1))

`echo "$HEADER" > "$PATH/$OUTPUT"`

FILES="$PATH/*"

#Showing files to be included in combined
if [ $LIST = 1 ]; then
    for f in $FILES
    do  
        RES=`/usr/bin/expr match "$f" '.*/[0-9][0-9][0-9]-.*.js'`
        if [ ! $RES = 0 ]; then
            TMP=${#PATH}+1
            echo "  ${f:$TMP:-3}"
        fi
    done
    exit 0
fi

#making exclude file list
EXCLUDE=()
for file in "$@"; do
  EXCLUDE=( "${EXCLUDE[@]}" "$file" )
done

#building combined javascript file
echo "Builidng $PATH/$OUTPUT file:"
for f in $FILES
do  

RES=`/usr/bin/expr match "$f" '.*/[0-9][0-9][0-9]-.*.js'`
if [ ! $RES = 0 ]; then
    if [ ! ${#EXCLUDE[*]} = 0 ]; then
        PROCESS=1
        for v in ${EXCLUDE[*]}
        do
            RES2=`/usr/bin/expr match "$f" ".*/$v.js"`
            if [ ! $RES2 = 0 ]; then 
                PROCESS=0
            fi
        done 
    else
        PROCESS=1
    fi
    
    if [ $PROCESS = 1 ]; then
        if [ ! "$f" = "$PATH/$OUTPUT" ]; then
            echo "  Processing file '$f'"
            `/bin/cat "$f" >> $PATH/$OUTPUT`
        fi
    else
        echo "  Excluded file '$f'"
    fi
else
    echo "  Skipping file '$f'"
fi

done
